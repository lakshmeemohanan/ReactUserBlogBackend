{"version":3,"file":"static/js/435.c2407175.chunk.js","mappings":"kKAYA,EARa,SAAAA,GACX,OACE,gBAAKC,UAAS,eAAUD,EAAMC,WAAaC,MAAOF,EAAME,MAAxD,SACGF,EAAMG,a,gICSb,EAZe,SAAAH,GACb,OACE,gBAAKC,UAAS,iBAAYD,EAAMC,WAAaC,MAAOF,EAAME,MAA1D,UACE,gBACEE,IAAKJ,EAAMK,MACXC,IAAKN,EAAMM,IACXJ,MAAO,CAAEK,MAAOP,EAAMO,MAAOC,OAAQR,EAAMO,Y,UCcnD,EAjBiB,SAAAP,GACb,OACI,eAAIC,UAAU,YAAd,UACI,SAACQ,EAAA,EAAD,CAAMR,UAAU,qBAAhB,UACI,UAAC,KAAD,CAAMS,GAAE,WAAMV,EAAMW,GAAZ,WAAR,WACI,gBAAKV,UAAU,mBAAf,UACG,SAAC,EAAD,CAAQI,MAAK,UAAKO,sCAAL,YAAwCZ,EAAMK,OAASC,IAAKN,EAAMa,UAElF,iBAAKZ,UAAU,kBAAf,WACI,wBAAKD,EAAMa,QACX,0BAAKb,EAAMc,WAAX,IAA6C,IAArBd,EAAMc,WAAmB,QAAU,uBCKnF,EAhBkB,SAAAd,GACd,OAA0B,IAAvBA,EAAMe,MAAMC,QAEP,gBAAKf,UAAU,SAAf,UACI,SAACQ,EAAA,EAAD,WACI,gDAKT,eAAIR,UAAU,aAAd,SACFD,EAAMe,MAAME,KAAI,SAAAC,GAAI,OACrB,SAAC,EAAD,CAAwBP,GAAIO,EAAKP,GAAIN,MAAOa,EAAKb,MAAOQ,KAAMK,EAAKL,KAAMC,WAAYI,EAAKC,OAAOH,QAAlFE,EAAKP,U,8BCa5B,EAzBc,WACV,OAAsCS,EAAAA,EAAAA,YAAtC,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAAsDC,EAAAA,EAAAA,KAA9CC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,MAAOC,EAA1B,EAA0BA,YAAaC,EAAvC,EAAuCA,WAWvC,OATAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAU,yCAAG,kHAEgBH,EAAYd,iDAF5B,OAELkB,EAFK,OAGXR,EAAeQ,EAAaC,OAHjB,uGAAH,qDAMhBF,MACD,CAACH,KAEA,UAAC,WAAD,YACI,SAACM,EAAA,EAAD,CAAYP,MAAOA,EAAOQ,QAASN,IAClCH,IACG,gBAAKvB,UAAU,SAAf,UACI,SAACiC,EAAA,EAAD,OAGNV,GAAaH,IAAe,SAAC,EAAD,CAAWN,MAAOM","sources":["shared/components/UIElements/Card.js","shared/components/UIElements/Avatar.js","user/components/UserItem.js","user/components/UsersList.js","user/pages/Users.js"],"sourcesContent":["import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\nimport './Avatar.css';\n\nconst Avatar = props => {\n  return (\n    <div className={`avatar ${props.className}`} style={props.style}>\n      <img\n        src={props.image}\n        alt={props.alt}\n        style={{ width: props.width, height: props.width }}\n      />\n    </div>\n  );\n};\n\nexport default Avatar;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Avatar from '../../shared/components/UIElements/Avatar';\nimport Card from '../../shared/components/UIElements/Card';\n\nimport './UserItem.css';\n\nconst UserItem = props => {\n    return (\n        <li className=\"user-item\">\n            <Card className=\"user-item__content\">\n                <Link to={`/${props.id}/places`}>\n                    <div className=\"user-item__image\">\n                       <Avatar image={`${process.env.REACT_APP_ASSET_URL}/${props.image}`} alt={props.name} />\n                    </div>\n                    <div className=\"user-item__info\">\n                        <h2>{props.name}</h2>\n                        <h3>{props.placeCount} {props.placeCount === 1 ? 'Place' : 'Places'}</h3>\n                    </div>\n                </Link>\n            </Card>\n        </li>\n    );\n};\nexport default UserItem;","import React from 'react';\n\nimport UserItem from './UserItem';\nimport Card from '../../shared/components/UIElements/Card';\nimport './UsersList.css';\n\nconst UsersList = props =>{\n    if(props.items.length === 0){\n        return (\n            <div className=\"center\">\n                <Card>\n                    <h2>No users found</h2>\n                </Card>\n            </div>\n        );\n    }\n    return <ul className=\"users-list\">\n        {props.items.map(user => (\n        <UserItem key={user.id} id={user.id} image={user.image} name={user.name} placeCount={user.places.length} />\n        ))}\n    </ul>\n};\nexport default UsersList;","import React, { useEffect, useState } from 'react';\nimport UsersList from '../components/UsersList';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\n\nconst Users = () =>{\n    const [loadedUsers, setLoadedUsers] = useState();\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n    useEffect(() => {\n        const fetchUsers = async () => {\n            try{\n                const responseData = await sendRequest(process.env.REACT_APP_BACKEND_URL + '/users');\n                setLoadedUsers(responseData.users);\n            }catch(err){}\n        };\n        fetchUsers();\n    }, [sendRequest]);\n    return (\n        <React.Fragment>\n            <ErrorModal error={error} onClear={clearError} />\n            {isLoading &&  (\n                <div className=\"center\">\n                    <LoadingSpinner />\n                </div>\n            )}\n            {!isLoading && loadedUsers && <UsersList items={loadedUsers} />}\n        </React.Fragment>\n    );\n};\nexport default Users;"],"names":["props","className","style","children","src","image","alt","width","height","Card","to","id","process","name","placeCount","items","length","map","user","places","useState","loadedUsers","setLoadedUsers","useHttpClient","isLoading","error","sendRequest","clearError","useEffect","fetchUsers","responseData","users","ErrorModal","onClear","LoadingSpinner"],"sourceRoot":""}