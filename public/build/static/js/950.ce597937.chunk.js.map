{"version":3,"file":"static/js/950.ce597937.chunk.js","mappings":"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","sources":["shared/components/FormElements/ImageUpload.js","shared/components/FormElements/Input.js","shared/components/UIElements/Card.js","shared/hooks/form-hook.js","shared/utils/validators.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","user/pages/Auth.js"],"sourcesContent":["import React, {useRef, useState, useEffect} from \"react\";\nimport './ImageUpload.css';\nimport Button from \"./Button\";\n\nconst ImageUpload = props => {\n    const filePickerRef = useRef();\n    const [file, setFile] = useState();\n    const [previewURL, setPreviewURL] = useState();\n    const [isValid, setIsValid] = useState();\n\n    /* To generate a preview of the image picked  starts */\n    useEffect(() => {\n        if(!file){\n            return;\n        }\n        const fileReader = new FileReader();\n        fileReader.onload = () =>{\n            setPreviewURL(fileReader.result);\n        };\n        fileReader.readAsDataURL(file);\n    }, [file]);\n    /* To generate a preview of the image picked  ends */\n\n    /* To show the list of files to be selected to upload starts */\n    const pickImageHandler = () => {\n        filePickerRef.current.click();\n    };\n    /* To show the list of files to be selected to upload ends */\n\n    /* Process done when a file is selected to upload starts */\n    const pickedHandler = event => {\n        let pickedFile;\n        let fileIsValid = isValid;\n        if(event.target.files && event.target.files.length === 1){\n            pickedFile = event.target.files[0];\n            setFile(pickedFile);\n            setIsValid(true);\n            fileIsValid = true;\n        }else{\n            setIsValid(false);\n            fileIsValid = false;\n        }\n        props.onInput(props.id, pickedFile, fileIsValid);\n    };\n    /* Process done when a file is selected to upload ends */\n    return (\n        <div className=\"form-input\">\n            <input id={props.id} style={{display:'none'}} ref={filePickerRef} \n            type=\"file\" accept=\".jpeg,.jpg,.png\" onChange={pickedHandler} />\n            <div className={`image-upload ${props.center && 'center'}`}>\n                <div className=\"image-upload__preview\">\n                    {previewURL && <img src={previewURL} alt=\"Preview\" />}\n                    {!previewURL && <p>Please pick an image.</p>}\n                </div>\n                <Button type=\"button\" onClick={pickImageHandler}>PICK IMAGE</Button>\n            </div>\n            {!isValid && <p>{props.errorText}</p>}\n        </div>\n    );\n};\nexport default ImageUpload;","import React, { useReducer, useEffect } from 'react';\nimport { validate } from '../../utils/validators';\n\nimport './Input.css';\n\nconst inputReducer = (state,action) => {\n    switch(action.type){\n        case 'CHANGE':\n            return{\n                ...state,\n                value: action.val,\n                isValid: validate(action.val,action.validators)\n\n            }\n        case 'TOUCH':{\n            return{\n                ...state,\n                isTouched: true\n            }\n        }\n        default:\n            return state;\n    }\n};\nconst Input = props => {\n    \n    const [inputState, dispatch] = useReducer(inputReducer, {value: props.initialValue || '', isTouched: false, isValid: props.initialValid || false});\n\n    const {id, onInput} = props;\n    const {value, isValid } = inputState;\n\n    useEffect(() => {\n        onInput(id, value, isValid)\n    }, [id, value, isValid, onInput]);\n\n    const changeHandler = event => {\n        dispatch({type: 'CHANGE', val: event.target.value, validators: props.validators });\n    };\n\n    const touchHandler = () =>{\n        dispatch({\n            type: 'TOUCH'\n        });\n    };\n\n    const element = props.element === 'input' ? (\n    <input id={props.id} type={props.type} value={inputState.value} \n    onBlur={touchHandler} onChange={changeHandler} placeholder={props.placeholder} /> ) : (\n    <textarea id={props.id} rows={props.rows || 3} value={inputState.value} \n    onBlur={touchHandler} onChange={changeHandler} /> );\n\n  return (\n    <div\n      className={`form-control ${!inputState.isValid && inputState.isTouched &&\n        'form-control--invalid'}`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n};\nexport default Input;","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import { useCallback, useReducer } from 'react';\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if(!state.inputs[inputId]){\n          continue;\n        }\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid }\n        },\n        isValid: formIsValid\n      };\n    case 'SET_DATA':\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid\n      };\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity\n  });\n\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      value: value,\n      isValid: isValid,\n      inputId: id\n    });\n  }, []);\n\n  const setFormData = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: 'SET_DATA',\n      inputs: inputData,\n      formIsValid: formValidity\n    });\n  }, []);\n  return [formState, inputHandler, setFormData];\n};","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import React, {useState, useContext} from 'react';\n\nimport Card from '../../shared/components/UIElements/Card';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport {VALIDATOR_EMAIL,VALIDATOR_MINLENGTH,VALIDATOR_REQUIRE} from '../../shared/utils/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload';\nimport './Auth.css';\n\nconst Auth = () => {\n  const auth = useContext(AuthContext);\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  \n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      email: {\n        value: '',\n        isValid: false\n      },\n      password: {\n        value: '',\n        isValid: false\n      }\n    },\n    false\n  );\n\n  const authSubmitHandler = async event => {\n    event.preventDefault();\n\n    if(isLoginMode){\n      try{\n        const responseData = await sendRequest(process.env.REACT_APP_BACKEND_URL + '/users/login', 'POST', JSON.stringify({\n          email: formState.inputs.email.value,\n          password: formState.inputs.password.value\n        }),\n        {\n          'Content-Type': 'application/json'\n        });\n        auth.login(responseData.userId, responseData.token);\n      }catch(err){}\n    }else{\n      try{\n        const formData = new FormData();\n        formData.append('name', formState.inputs.name.value);\n        formData.append('email', formState.inputs.email.value);\n        formData.append('password', formState.inputs.password.value);\n        formData.append('image', formState.inputs.image.value);\n\n        const responseData = await sendRequest(process.env.REACT_APP_BACKEND_URL + '/users/signup','POST', formData);\n        auth.login(responseData.userId, responseData.token);\n      }catch(err){}\n    }\n  };\n\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: undefined,\n          image:undefined\n        },\n        formState.inputs.email.isValid && formState.inputs.password.isValid\n      );\n    } else {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: {\n            value: '',\n            isValid: false\n          },\n          image: {\n            value: null,\n            isValid: false\n          }\n        },\n        false\n      );\n    }\n    setIsLoginMode(prevMode => !prevMode);\n  };\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <Card className=\"authentication\">\n        {isLoading && <LoadingSpinner asOverlay />}\n        <h2>Login Required</h2>\n        <hr />\n        <form onSubmit={authSubmitHandler}>\n          {!isLoginMode && \n          <Input \n            element =\"input\" \n            id=\"name\" \n            type=\"text\" \n            label=\"Name\" \n            validators={[VALIDATOR_REQUIRE()]} \n            errorText=\"Please enter a name.\"\n            onInput={inputHandler}/>}\n           {!isLoginMode && <ImageUpload center id=\"image\" onInput={inputHandler} errorText=\"Please provide an image\" /> }\n          <Input\n            element=\"input\"\n            id=\"email\"\n            type=\"email\"\n            label=\"E-Mail\"\n            validators={[VALIDATOR_EMAIL()]}\n            errorText=\"Please enter a valid email address.\"\n            onInput={inputHandler}\n          />\n          <Input\n            element=\"input\"\n            id=\"password\"\n            type=\"password\"\n            label=\"Password\"\n            validators={[VALIDATOR_MINLENGTH(6)]}\n            errorText=\"Please enter a valid password, at least 6 characters.\"\n            onInput={inputHandler}\n          />\n          <Button type=\"submit\" disabled={!formState.isValid}>\n            {isLoginMode ? 'LOGIN' : 'SIGNUP'}\n          </Button>\n        </form>\n        <Button inverse onClick={switchModeHandler}>SWITCH TO {isLoginMode ? 'SIGNUP' : 'LOGIN'}</Button>\n      </Card>\n    </React.Fragment>\n  );\n};\nexport default Auth;"],"names":["props","filePickerRef","useRef","useState","file","setFile","previewURL","setPreviewURL","isValid","setIsValid","useEffect","fileReader","FileReader","onload","result","readAsDataURL","className","id","style","display","ref","type","accept","onChange","event","pickedFile","fileIsValid","target","files","length","onInput","center","src","alt","Button","onClick","current","click","errorText","inputReducer","state","action","value","val","validate","validators","isTouched","useReducer","initialValue","initialValid","inputState","dispatch","changeHandler","touchHandler","element","onBlur","placeholder","rows","htmlFor","label","children","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","useCallback","inputData","formValidity","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","VALIDATOR_EMAIL","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","i","F","s","n","done","e","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2","validator","trim","test","auth","useContext","AuthContext","isLoginMode","setIsLoginMode","useHttpClient","isLoading","error","sendRequest","clearError","email","password","inputHandler","setFormData","authSubmitHandler","preventDefault","process","JSON","stringify","responseData","login","userId","token","formData","FormData","append","name","image","ErrorModal","onClear","Card","LoadingSpinner","asOverlay","onSubmit","Input","ImageUpload","disabled","inverse","undefined","prevMode"],"sourceRoot":""}