{"version":3,"file":"static/js/990.dd5fdad3.chunk.js","mappings":"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","sources":["places/pages/UpdatePlace.js","shared/components/FormElements/Input.js","shared/components/UIElements/Card.js","shared/hooks/form-hook.js","shared/utils/validators.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js"],"sourcesContent":["import React, {useEffect, useState, useContext} from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport Card from '../../shared/components/UIElements/Card';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH\n} from '../../shared/utils/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport './PlaceForm.css';\n\nconst UpdatePlace = () => {\n  const auth = useContext(AuthContext);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [loadedPlace, setLoadedPlace] = useState();\n  const placeId = useParams().placeId;\n  const history = useHistory();\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      title: {\n        value: '',\n        isValid: false\n      },\n      description: {\n        value: '',\n        isValid: false\n      }\n    },\n    false\n  );\n\n  useEffect(() => {\n    const fetchPlace = async () => {\n      try{\n        const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`);\n        setLoadedPlace(responseData.place);\n        setFormData({\n          title: {\n            value: responseData.place.title,\n            isValid: true\n          },\n          description: {\n            value: responseData.place.description,\n            isValid: true\n          }\n        }, true);\n\n      }catch(err){}\n    };\n    fetchPlace();\n  }, [sendRequest, placeId, setFormData]);\n\n  \n  const placeUpdateSubmitHandler = async event => {\n    event.preventDefault();\n    try{\n      await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`, 'PATCH',JSON.stringify({\n        title: formState.inputs.title.value,\n        description: formState.inputs.description.value\n      }),\n      {\n        'Content-Type': 'application/json',\n         Authorization: 'Bearer ' + auth.token\n      });\n      history.push('/'+ auth.userId + '/places');\n    }catch(err){}\n  };\n\n  if(isLoading){\n    return (\n      <div className=\"center\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n if (!loadedPlace && !error) {\n    return (\n      <div className=\"center\">\n        <Card><h2>Could not find place!</h2></Card>\n      </div>\n    );\n  }\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {!isLoading && loadedPlace && ( <form className=\"place-form\" onSubmit={placeUpdateSubmitHandler}>\n      <Input\n        id=\"title\"\n        element=\"input\"\n        type=\"text\"\n        label=\"Title\"\n        validators={[VALIDATOR_REQUIRE()]}\n        errorText=\"Please enter a valid title.\"\n        onInput={inputHandler}\n        initialValue={loadedPlace.title}\n        initialValid={true}\n      />\n      <Input\n        id=\"description\"\n        element=\"textarea\"\n        label=\"Description\"\n        validators={[VALIDATOR_MINLENGTH(5)]}\n        errorText=\"Please enter a valid description (min. 5 characters).\"\n        onInput={inputHandler}\n        initialValue={loadedPlace.description}\n        initialValid={true}\n      />\n      <Button type=\"submit\" disabled={!formState.isValid}>\n        UPDATE PLACE\n      </Button>\n      </form>\n      )}\n    </React.Fragment>\n  );\n};\nexport default UpdatePlace;\n","import React, { useReducer, useEffect } from 'react';\nimport { validate } from '../../utils/validators';\n\nimport './Input.css';\n\nconst inputReducer = (state,action) => {\n    switch(action.type){\n        case 'CHANGE':\n            return{\n                ...state,\n                value: action.val,\n                isValid: validate(action.val,action.validators)\n\n            }\n        case 'TOUCH':{\n            return{\n                ...state,\n                isTouched: true\n            }\n        }\n        default:\n            return state;\n    }\n};\nconst Input = props => {\n    \n    const [inputState, dispatch] = useReducer(inputReducer, {value: props.initialValue || '', isTouched: false, isValid: props.initialValid || false});\n\n    const {id, onInput} = props;\n    const {value, isValid } = inputState;\n\n    useEffect(() => {\n        onInput(id, value, isValid)\n    }, [id, value, isValid, onInput]);\n\n    const changeHandler = event => {\n        dispatch({type: 'CHANGE', val: event.target.value, validators: props.validators });\n    };\n\n    const touchHandler = () =>{\n        dispatch({\n            type: 'TOUCH'\n        });\n    };\n\n    const element = props.element === 'input' ? (\n    <input id={props.id} type={props.type} value={inputState.value} \n    onBlur={touchHandler} onChange={changeHandler} placeholder={props.placeholder} /> ) : (\n    <textarea id={props.id} rows={props.rows || 3} value={inputState.value} \n    onBlur={touchHandler} onChange={changeHandler} /> );\n\n  return (\n    <div\n      className={`form-control ${!inputState.isValid && inputState.isTouched &&\n        'form-control--invalid'}`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n};\nexport default Input;","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import { useCallback, useReducer } from 'react';\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if(!state.inputs[inputId]){\n          continue;\n        }\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid }\n        },\n        isValid: formIsValid\n      };\n    case 'SET_DATA':\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid\n      };\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity\n  });\n\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      value: value,\n      isValid: isValid,\n      inputId: id\n    });\n  }, []);\n\n  const setFormData = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: 'SET_DATA',\n      inputs: inputData,\n      formIsValid: formValidity\n    });\n  }, []);\n  return [formState, inputHandler, setFormData];\n};","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}"],"names":["auth","useContext","AuthContext","useHttpClient","isLoading","error","sendRequest","clearError","useState","loadedPlace","setLoadedPlace","placeId","useParams","history","useHistory","useForm","title","value","isValid","description","formState","inputHandler","setFormData","useEffect","fetchPlace","process","responseData","place","placeUpdateSubmitHandler","event","preventDefault","JSON","stringify","inputs","Authorization","token","push","userId","className","onClear","onSubmit","id","element","type","label","validators","VALIDATOR_REQUIRE","errorText","onInput","initialValue","initialValid","VALIDATOR_MINLENGTH","disabled","inputReducer","state","action","val","validate","isTouched","props","useReducer","inputState","dispatch","changeHandler","target","touchHandler","onBlur","onChange","placeholder","rows","htmlFor","style","children","formReducer","formIsValid","inputId","initialInputs","initialFormValidity","useCallback","inputData","formValidity","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_EMAIL","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","length","i","F","s","n","done","e","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2","validator","trim","test"],"sourceRoot":""}