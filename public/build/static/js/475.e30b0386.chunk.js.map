{"version":3,"file":"static/js/475.e30b0386.chunk.js","mappings":"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","sources":["places/components/PlaceItem.js","places/components/PlaceList.js","places/pages/UserPlaces.js","shared/components/UIElements/Card.js"],"sourcesContent":["import React, {useState, useContext} from 'react';\nimport Card from '../../shared/components/UIElements/Card';\nimport Button from '../../shared/components/FormElements/Button';\nimport Modal from '../../shared/components/UIElements/Modal';\nimport {AuthContext} from '../../shared/context/auth-context';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\n\nimport './PlaceItem.css';\n\nconst PlaceItem = props => {\n    const auth = useContext(AuthContext);\n    const [showConfirmModal, setShowConfirmModal] = useState(false);\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n\n    const showDeleteWarningHandler = () => {\n        setShowConfirmModal(true);\n    };\n    const cancelDeleteHandler = () => {\n        setShowConfirmModal(false);\n    };\n    const confirmDeleteHandler = async () => {\n        setShowConfirmModal(false);\n        try{\n            await sendRequest(process.env.REACT_APP_BACKEND_URL + `/places/${props.id}`, 'DELETE', null, {\n                Authorization: 'Bearer ' + auth.token \n            });\n            props.onDelete(props.id);\n        }catch(err){}\n    };\n    return (\n        <React.Fragment>\n            <ErrorModal error={error} onClear={clearError} />\n            <Modal header=\"Are you sure?\" footerClass=\"place-item__modal-actions\" show={showConfirmModal} onCancel={cancelDeleteHandler} footer={\n                <React.Fragment>\n                    <Button inverse onClick={cancelDeleteHandler}>CANCEL</Button>\n                    <Button danger onClick={confirmDeleteHandler}>DELETE</Button>\n                </React.Fragment>\n            }>\n                <p>Do you want to proceed and delete this place ? Please note that it cannot be undone thereafter.</p>\n            </Modal>\n            \n            <li className=\"place-item\">\n                <Card className=\"place-item__content\">\n                    {isLoading && <LoadingSpinner asOverlay/>}\n                    <div className=\"place-item__image\">\n                        <img src={`${process.env.REACT_APP_ASSET_URL}/${props.image}`} alt={props.title} />\n                    </div>\n                    <div className=\"place-item__info\">\n                        <h2>{props.title}</h2>\n                        <h3>{props.address}</h3>\n                        <p>{props.description}</p>\n                    </div>\n                    <div className=\"place-item__actions\">\n                        {/*<Button inverse >VIEW ON MAP</Button>*/}\n                        {auth.userId === props.creatorId && <Button to={`/places/${props.id}`}>EDIT</Button>}\n                        {auth.userId === props.creatorId && <Button danger onClick={showDeleteWarningHandler}>DELETE</Button>}\n                    </div>\n                </Card>\n            </li>\n        </React.Fragment>\n    );\n};\n\nexport default PlaceItem;","import React from 'react';\nimport Button from '../../shared/components/FormElements/Button';\nimport Card from '../../shared/components/UIElements/Card';\nimport PlaceItem from './PlaceItem';\nimport './PlaceList.css';\n\nconst PlaceList = props => {\n    if(props.items.length === 0){\n        return <div className=\"place-list center\">\n            <Card>\n                <h2>No Places Found</h2>\n                <Button to=\"/places/new\">Share Place</Button>\n            </Card>\n        </div>\n    }\n    return (\n    <ul className=\"place-list\">\n       {props.items.map(place => <PlaceItem key={place.id} id={place.id} image={place.image} \n       title={place.title} description={place.description} address={place.address} creatorId={place.creator} \n       coordinates={place.location} onDelete={props.onDeletePlace} />)}\n\n    </ul>\n    );\n};\nexport default PlaceList;","import React, {useEffect, useState} from 'react';\nimport {useParams} from 'react-router-dom';\nimport PlaceList from '../components/PlaceList';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport './UserPlaces.css';\n\nconst UserPlaces = () => {\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\n    const userId = useParams().userId;\n    const [loadedPlaces, setLoadedPlaces] = useState();\n\n    useEffect(() => {\n        const fetchPlaces = async () => {\n            try{\n                const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/places/user/${userId}`);\n                setLoadedPlaces(responseData.places);\n            }catch(err){}\n        };\n        fetchPlaces();\n    }, [sendRequest, userId]);\n\n    const placeDeletedHandler = deletedPlaceHandler => {\n        setLoadedPlaces(prevPlaces => prevPlaces.filter(place => place.id !== deletedPlaceHandler));\n    }\n   \n    return (\n        <React.Fragment>\n            <ErrorModal error={error} onClear={clearError} />\n            {isLoading && (\n                <div className='=\"center'>\n                    <LoadingSpinner />\n                </div>\n            )}\n            {!isLoading && loadedPlaces && <PlaceList items={loadedPlaces} onDeletePlace={placeDeletedHandler} />}\n        </React.Fragment>\n    );\n};\nexport default UserPlaces;","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n"],"names":["props","auth","useContext","AuthContext","useState","showConfirmModal","setShowConfirmModal","useHttpClient","isLoading","error","sendRequest","clearError","cancelDeleteHandler","confirmDeleteHandler","process","id","Authorization","token","onDelete","ErrorModal","onClear","Modal","header","footerClass","show","onCancel","footer","Button","inverse","onClick","danger","className","Card","LoadingSpinner","asOverlay","src","image","alt","title","address","description","userId","creatorId","to","items","length","map","place","creator","coordinates","location","onDeletePlace","useParams","loadedPlaces","setLoadedPlaces","useEffect","fetchPlaces","responseData","places","deletedPlaceHandler","prevPlaces","filter","style","children"],"sourceRoot":""}