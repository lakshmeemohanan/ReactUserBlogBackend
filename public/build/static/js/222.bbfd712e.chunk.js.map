{"version":3,"file":"static/js/222.bbfd712e.chunk.js","mappings":"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","sources":["places/pages/NewPlace.js","shared/components/FormElements/ImageUpload.js","shared/components/FormElements/Input.js","shared/hooks/form-hook.js","shared/utils/validators.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js"],"sourcesContent":["import React, { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH\n} from '../../shared/utils/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload';\n\nimport './PlaceForm.css';\n\nconst NewPlace = () => {\n  const auth = useContext(AuthContext);\n  const {isLoading, error, sendRequest, clearError} = useHttpClient();\n  const [formState, inputHandler] = useForm(\n    {\n      title: {\n        value: '',\n        isValid: false\n      },\n      image: {\n        value: null,\n        isValid: false\n      },\n      description: {\n        value: '',\n        isValid: false\n      },\n      address: {\n        value: '',\n        isValid: false\n      }\n    },\n    false\n  );\n\n  const history = useHistory();\n\n  const placeSubmitHandler = async event => {\n    event.preventDefault();\n    try{\n        const formData = new FormData();\n        formData.append('title', formState.inputs.title.value);\n        formData.append('description', formState.inputs.description.value);\n        formData.append('address', formState.inputs.address.value);\n        formData.append('image', formState.inputs.image.value);\n\n      await sendRequest(process.env.REACT_APP_BACKEND_URL + '/places', 'POST', formData, {\n        Authorization: 'Bearer ' + auth.token\n      });\n      history.push('/');\n    }catch(err){}\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <form className=\"place-form\" onSubmit={placeSubmitHandler}>\n        {isLoading && <LoadingSpinner asOverlay />}\n        <Input\n          id=\"title\"\n          element=\"input\"\n          type=\"text\"\n          label=\"Title\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid title.\"\n          onInput={inputHandler}\n        />\n        <ImageUpload center id=\"image\" onInput={inputHandler} errorText=\"Please provide an image\" />\n        <Input\n          id=\"description\"\n          element=\"textarea\"\n          label=\"Description\"\n          validators={[VALIDATOR_MINLENGTH(5)]}\n          errorText=\"Please enter a valid description (at least 5 characters).\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"address\"\n          element=\"input\"\n          label=\"Address\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid address.\"\n          onInput={inputHandler}\n        />\n        <Button type=\"submit\" disabled={!formState.isValid}>\n          ADD PLACE\n        </Button>\n      </form>\n    </React.Fragment>\n  );\n};\nexport default NewPlace;\n","import React, {useRef, useState, useEffect} from \"react\";\nimport './ImageUpload.css';\nimport Button from \"./Button\";\n\nconst ImageUpload = props => {\n    const filePickerRef = useRef();\n    const [file, setFile] = useState();\n    const [previewURL, setPreviewURL] = useState();\n    const [isValid, setIsValid] = useState();\n\n    /* To generate a preview of the image picked  starts */\n    useEffect(() => {\n        if(!file){\n            return;\n        }\n        const fileReader = new FileReader();\n        fileReader.onload = () =>{\n            setPreviewURL(fileReader.result);\n        };\n        fileReader.readAsDataURL(file);\n    }, [file]);\n    /* To generate a preview of the image picked  ends */\n\n    /* To show the list of files to be selected to upload starts */\n    const pickImageHandler = () => {\n        filePickerRef.current.click();\n    };\n    /* To show the list of files to be selected to upload ends */\n\n    /* Process done when a file is selected to upload starts */\n    const pickedHandler = event => {\n        let pickedFile;\n        let fileIsValid = isValid;\n        if(event.target.files && event.target.files.length === 1){\n            pickedFile = event.target.files[0];\n            setFile(pickedFile);\n            setIsValid(true);\n            fileIsValid = true;\n        }else{\n            setIsValid(false);\n            fileIsValid = false;\n        }\n        props.onInput(props.id, pickedFile, fileIsValid);\n    };\n    /* Process done when a file is selected to upload ends */\n    return (\n        <div className=\"form-input\">\n            <input id={props.id} style={{display:'none'}} ref={filePickerRef} \n            type=\"file\" accept=\".jpeg,.jpg,.png\" onChange={pickedHandler} />\n            <div className={`image-upload ${props.center && 'center'}`}>\n                <div className=\"image-upload__preview\">\n                    {previewURL && <img src={previewURL} alt=\"Preview\" />}\n                    {!previewURL && <p>Please pick an image.</p>}\n                </div>\n                <Button type=\"button\" onClick={pickImageHandler}>PICK IMAGE</Button>\n            </div>\n            {!isValid && <p>{props.errorText}</p>}\n        </div>\n    );\n};\nexport default ImageUpload;","import React, { useReducer, useEffect } from 'react';\nimport { validate } from '../../utils/validators';\n\nimport './Input.css';\n\nconst inputReducer = (state,action) => {\n    switch(action.type){\n        case 'CHANGE':\n            return{\n                ...state,\n                value: action.val,\n                isValid: validate(action.val,action.validators)\n\n            }\n        case 'TOUCH':{\n            return{\n                ...state,\n                isTouched: true\n            }\n        }\n        default:\n            return state;\n    }\n};\nconst Input = props => {\n    \n    const [inputState, dispatch] = useReducer(inputReducer, {value: props.initialValue || '', isTouched: false, isValid: props.initialValid || false});\n\n    const {id, onInput} = props;\n    const {value, isValid } = inputState;\n\n    useEffect(() => {\n        onInput(id, value, isValid)\n    }, [id, value, isValid, onInput]);\n\n    const changeHandler = event => {\n        dispatch({type: 'CHANGE', val: event.target.value, validators: props.validators });\n    };\n\n    const touchHandler = () =>{\n        dispatch({\n            type: 'TOUCH'\n        });\n    };\n\n    const element = props.element === 'input' ? (\n    <input id={props.id} type={props.type} value={inputState.value} \n    onBlur={touchHandler} onChange={changeHandler} placeholder={props.placeholder} /> ) : (\n    <textarea id={props.id} rows={props.rows || 3} value={inputState.value} \n    onBlur={touchHandler} onChange={changeHandler} /> );\n\n  return (\n    <div\n      className={`form-control ${!inputState.isValid && inputState.isTouched &&\n        'form-control--invalid'}`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n};\nexport default Input;","import { useCallback, useReducer } from 'react';\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if(!state.inputs[inputId]){\n          continue;\n        }\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid }\n        },\n        isValid: formIsValid\n      };\n    case 'SET_DATA':\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid\n      };\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity\n  });\n\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      value: value,\n      isValid: isValid,\n      inputId: id\n    });\n  }, []);\n\n  const setFormData = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: 'SET_DATA',\n      inputs: inputData,\n      formIsValid: formValidity\n    });\n  }, []);\n  return [formState, inputHandler, setFormData];\n};","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}"],"names":["auth","useContext","AuthContext","useHttpClient","isLoading","error","sendRequest","clearError","useForm","title","value","isValid","image","description","address","formState","inputHandler","history","useHistory","placeSubmitHandler","event","preventDefault","formData","FormData","append","inputs","process","Authorization","token","push","onClear","className","onSubmit","asOverlay","id","element","type","label","validators","VALIDATOR_REQUIRE","errorText","onInput","center","VALIDATOR_MINLENGTH","disabled","props","filePickerRef","useRef","useState","file","setFile","previewURL","setPreviewURL","setIsValid","useEffect","fileReader","FileReader","onload","result","readAsDataURL","style","display","ref","accept","onChange","pickedFile","fileIsValid","target","files","length","src","alt","Button","onClick","current","click","inputReducer","state","action","val","validate","isTouched","useReducer","initialValue","initialValid","inputState","dispatch","changeHandler","touchHandler","onBlur","placeholder","rows","htmlFor","formReducer","formIsValid","inputId","initialInputs","initialFormValidity","useCallback","inputData","formValidity","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_EMAIL","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","i","F","s","n","done","e","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2","validator","trim","test"],"sourceRoot":""}